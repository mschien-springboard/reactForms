{"ast":null,"code":"var _jsxFileName = \"/home/fact/code/sb/39/form-exercise/todo-app/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport './Todo.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  task = \"default todo\",\n  id = \"1\",\n  removeTodo,\n  updateTodo\n}) {\n  _s();\n\n  const [editTask, setEditTask] = useState(task);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEdit = () => {\n    setIsEditing(edit => !edit);\n  };\n\n  const handleChange = evt => {\n    setEditTask(evt.target.value);\n  };\n\n  const handleDelete = () => removeTodo(id);\n\n  const handleUpdate = evt => {\n    evt.preventDefault();\n    updateTodo(id, editTask);\n    setIsEditing(false);\n  }; // default todo view\n  // todo view when editing\n\n\n  if (isEditing) {\n    jsx = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editTask,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Update!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {}\n\n  return jsx;\n}\n\n_s(Todo, \"RJxNA/w2om/mW2lfHyGvk2xXR+g=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/fact/code/sb/39/form-exercise/todo-app/src/Todo.js"],"names":["useState","Todo","task","id","removeTodo","updateTodo","editTask","setEditTask","isEditing","setIsEditing","toggleEdit","edit","handleChange","evt","target","value","handleDelete","handleUpdate","preventDefault","jsx"],"mappings":";;;AAAA,OAAO,YAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAI,GAAG,cAAT;AAAyBC,EAAAA,EAAE,GAAG,GAA9B;AAAmCC,EAAAA,UAAnC;AAA+CC,EAAAA;AAA/C,CAAd,EAA2E;AAAA;;AACzE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACE,IAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMU,UAAU,GAAG,MAAM;AACvBD,IAAAA,YAAY,CAACE,IAAI,IAAI,CAACA,IAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGC,GAAG,IAAI;AAC1BN,IAAAA,WAAW,CAACM,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAX;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAMZ,UAAU,CAACD,EAAD,CAArC;;AAEA,QAAMc,YAAY,GAAGJ,GAAG,IAAI;AAC1BA,IAAAA,GAAG,CAACK,cAAJ;AACAb,IAAAA,UAAU,CAACF,EAAD,EAAKG,QAAL,CAAV;AACAG,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAJD,CAdyE,CAoBzE;AAGA;;;AACA,MAAID,SAAJ,EAAe;AACbW,IAAAA,GAAG,gBACD;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEF,YAAhB;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEX,QAA1B;AAAoC,UAAA,QAAQ,EAAEM;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATD,MASO,CAEN;;AAED,SAAOO,GAAP;AACD;;GAtCQlB,I;;KAAAA,I;AAwCT,eAAeA,IAAf","sourcesContent":["import './Todo.css';\nimport { useState } from \"react\";\n\nfunction Todo({ task = \"default todo\", id = \"1\", removeTodo, updateTodo }) {\n  const [editTask, setEditTask] = useState(task);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEdit = () => {\n    setIsEditing(edit => !edit);\n  };\n\n  const handleChange = evt => {\n    setEditTask(evt.target.value);\n  };\n\n  const handleDelete = () => removeTodo(id);\n\n  const handleUpdate = evt => {\n    evt.preventDefault();\n    updateTodo(id, editTask);\n    setIsEditing(false);\n  };\n\n  // default todo view\n \n\n  // todo view when editing\n  if (isEditing) {\n    jsx = (\n      <div>\n        <form onSubmit={handleUpdate}>\n          <input type=\"text\" value={editTask} onChange={handleChange} />\n          <button>Update!</button>\n        </form>\n      </div>\n    );\n  } else {\n\n  }\n\n  return jsx;\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}